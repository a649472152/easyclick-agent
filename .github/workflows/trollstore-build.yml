name: EasyClick Build for TrollStore (Simplified)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout code with LFS
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Git LFS pull
      run: git lfs pull

    - name: Verify LFS files
      run: |
        echo "检查framework文件..."
        ls -la *.framework/ || echo "Framework目录检查完毕"
        echo "检查LFS跟踪的文件..."
        git lfs ls-files

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'

    - name: Build EasyClick Agent
      run: |
        echo "开始编译..."
        xcodebuild build-for-testing \
          -project tj-easyclick-agent.xcodeproj \
          -scheme WebDriverAgentRunner \
          -sdk iphoneos \
          -configuration Release \
          -derivedDataPath /tmp/derivedDataPath \
          -allowProvisioningUpdates \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO

    - name: Create Standard IPA
      run: |
        cd /tmp/derivedDataPath/Build/Products/Release-iphoneos
        echo "清理不需要的app..."
        rm -rf IntegrationApp.app || true
        echo "创建Payload目录..."
        mkdir -p Payload
        echo "移动app到Payload..."
        cp -r *.app Payload/ || true
        echo "打包标准版IPA..."
        zip -r EasyClick-Agent-Standard.ipa Payload
        echo "标准版IPA文件信息:"
        ls -la EasyClick-Agent-Standard.ipa

    - name: Create TrollStore Version (Method 1)
      run: |
        cd /tmp/derivedDataPath/Build/Products/Release-iphoneos
        
        echo "创建TrollStore版本目录..."
        rm -rf Payload-TrollStore
        cp -r Payload Payload-TrollStore
        
        APP_PATH=$(find Payload-TrollStore -name "*.app" -type d | head -1)
        echo "处理app路径: $APP_PATH"
        
        if [ -n "$APP_PATH" ]; then
          echo "移除签名文件..."
          rm -rf "$APP_PATH/_CodeSignature" || true
          rm -f "$APP_PATH/embedded.mobileprovision" || true
          find "$APP_PATH" -name "*.mobileprovision" -delete 2>/dev/null || true
          
          echo "创建TrollStore entitlements文件..."
          cat > "$APP_PATH/entitlements.plist" << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>get-task-allow</key>
          <true/>
          <key>com.apple.private.dtrace.allow</key>
          <true/>
          <key>com.apple.private.security.no-container</key>
          <true/>
        </dict>
        </plist>
        EOF
          
          echo "打包TrollStore版本..."
          zip -r EasyClick-Agent-TrollStore.ipa Payload-TrollStore
          echo "TrollStore版本文件信息:"
          ls -la EasyClick-Agent-TrollStore.ipa
        else
          echo "未找到app文件，跳过TrollStore版本创建"
        fi

    - name: Create Unsigned Version (Method 2)
      run: |
        cd /tmp/derivedDataPath/Build/Products/Release-iphoneos
        
        echo "创建无签名版本目录..."
        rm -rf Payload-Unsigned
        cp -r Payload Payload-Unsigned
        
        APP_PATH=$(find Payload-Unsigned -name "*.app" -type d | head -1)
        
        if [ -n "$APP_PATH" ]; then
          echo "彻底移除所有签名相关文件..."
          
          # 移除主app签名
          rm -rf "$APP_PATH/_CodeSignature" 2>/dev/null || true
          rm -f "$APP_PATH/embedded.mobileprovision" 2>/dev/null || true
          
          # 移除Frameworks中的签名
          if [ -d "$APP_PATH/Frameworks" ]; then
            find "$APP_PATH/Frameworks" -name "_CodeSignature" -type d -exec rm -rf {} + 2>/dev/null || true
          fi
          
          # 移除PlugIns中的签名
          if [ -d "$APP_PATH/PlugIns" ]; then
            find "$APP_PATH/PlugIns" -name "_CodeSignature" -type d -exec rm -rf {} + 2>/dev/null || true
          fi
          
          # 移除所有mobileprovision文件
          find "$APP_PATH" -name "*.mobileprovision" -delete 2>/dev/null || true
          
          echo "打包无签名版本..."
          zip -r EasyClick-Agent-Unsigned.ipa Payload-Unsigned
          echo "无签名版本文件信息:"
          ls -la EasyClick-Agent-Unsigned.ipa
        else
          echo "未找到app文件，跳过无签名版本创建"
        fi

    - name: Upload Standard IPA
      uses: actions/upload-artifact@v4
      with:
        name: EasyClick-Agent-Standard
        path: /tmp/derivedDataPath/Build/Products/Release-iphoneos/EasyClick-Agent-Standard.ipa
        retention-days: 30

    - name: Upload TrollStore IPA
      uses: actions/upload-artifact@v4
      with:
        name: EasyClick-Agent-TrollStore
        path: /tmp/derivedDataPath/Build/Products/Release-iphoneos/EasyClick-Agent-TrollStore.ipa
        retention-days: 30
      continue-on-error: true

    - name: Upload Unsigned IPA
      uses: actions/upload-artifact@v4
      with:
        name: EasyClick-Agent-Unsigned
        path: /tmp/derivedDataPath/Build/Products/Release-iphoneos/EasyClick-Agent-Unsigned.ipa
        retention-days: 30
      continue-on-error: true

    - name: Build Summary
      run: |
        cd /tmp/derivedDataPath/Build/Products/Release-iphoneos
        echo "🎉 构建完成！"
        echo ""
        echo "生成的IPA文件:"
        ls -lah *.ipa 2>/dev/null || echo "正在检查IPA文件..."
        
        # 显示详细信息
        for ipa in *.ipa; do
          if [ -f "$ipa" ]; then
            echo "📱 $ipa - $(du -h "$ipa" | cut -f1)"
          fi
        done 